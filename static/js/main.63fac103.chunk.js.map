{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","imagen.jpg","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","guardarGastos","creargasto","useEffect","presupuestoRestante","alt","src","Imagen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63fac103.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => (\r\n    <p className =\"alert alert-danger error\">{mensaje}</p>\r\n);\r\n  \r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\n\r\n \r\nexport default Error;","import React, {Fragment, useState} from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n\r\n    // definir el state\r\n    const [cantidad, guardarCantidad] = useState (0);\r\n    const [error,guardarError] = useState(false);\r\n\r\n    //Función que lee el presupuesto\r\n    const definirPresupuesto = e =>{\r\n        guardarCantidad (parseInt(e.target.value, 10))\r\n    }\r\n\r\n    //Submit para definir el presupuesto\r\n\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if (cantidad < 1 || isNaN(cantidad)){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        // si se pasa la validación\r\n        guardarError(false);\r\n        guardarPresupuesto (cantidad);\r\n        guardarRestante (cantidad);\r\n        actualizarPregunta(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        <div className=\"container_form\">\r\n            <h2>Coloca tu presupuesto</h2>\r\n\r\n            {error ? <Error mensaje =\"El presupuesto es incorrecto\" />  : null}\r\n\r\n            <form\r\n              onSubmit = {agregarPresupuesto}\r\n            >\r\n                <input\r\n                   type =\"number\"\r\n                   className =\"u-full-width\"\r\n                   placeholder =\"Coloca tu presupuesto\"\r\n                   onChange = {definirPresupuesto}\r\n                />\r\n\r\n                <button\r\n                   type =\"submit\"\r\n                   className =\"btn\"\r\n                   value = \"Definir Presupuesto\"\r\n                >\r\n                Definir Presupuesto</button>\r\n            </form>\r\n            </div>\r\n        </Fragment>\r\n      );\r\n\r\n    }\r\n\r\n    Pregunta.propTypes = {\r\n        guardarPresupuesto: PropTypes.func.isRequired,\r\n        guardarRestante: PropTypes.func.isRequired,\r\n        actualizarPregunta: PropTypes.func.isRequired\r\n    \r\n    }\r\n    \r\n\r\n \r\nexport default Pregunta;","import React, {useState} from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    const [nombre, guardarNombre] = useState('');\r\n    const [cantidad, guardarCantidad]= useState(0);\r\n    const [error, guardarError] = useState (false);\r\n\r\n    //cuando el usuario agrega un gasto\r\n    const agregarGasto = e =>{\r\n        e.preventDefault();\r\n\r\n        //validar\r\n        if (cantidad < 1 || isNaN (cantidad) || nombre.trim() ===''){\r\n          guardarError(true)\r\n          return;  \r\n        }\r\n        guardarError(false);\r\n\r\n        //construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n            \r\n        }\r\n\r\n        \r\n\r\n        //pasar el gasto al componente principal\r\n\r\n        guardarGasto(gasto)\r\n        guardarCrearGasto(true);\r\n\r\n        //resetear el form\r\n        guardarNombre('');\r\n        guardarCantidad(0);\r\n\r\n    }\r\n    return (\r\n        <form\r\n          onSubmit ={agregarGasto}\r\n        \r\n        >\r\n            <h2>Agrega tus gastos aquí</h2>\r\n\r\n             {error ? <Error mensaje =\"Ambos campos son obligatorios o Presupuesto Incorrecto\" /> :null}\r\n\r\n            <div className =\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type =\"text\"\r\n                    className = \"u-full-width\"\r\n                    placeholder =\" Ej. Transporte\"\r\n                    value= {nombre}\r\n                    onChange = { e => guardarNombre (e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className =\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type =\"number\"\r\n                    className = \"u-full-width\"\r\n                    placeholder =\" Ej. 300\"\r\n                    value= {cantidad}\r\n                    onChange = { e => guardarCantidad(parseInt (e.target.value, 10))}\r\n                />\r\n            </div>\r\n\r\n            <button\r\n              type =\"submit\"\r\n              className =\"btn_gastos\"\r\n              value= \"Agregar Gasto\"\r\n              \r\n            >Agregar Gasto</button>\r\n        </form>\r\n      );\r\n    }\r\n\r\n      Formulario.propTypes = {\r\n        guardarGasto: PropTypes.func.isRequired,\r\n        \r\n\r\n    }\r\n  \r\n\r\n \r\nexport default Formulario;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gasto = ({gasto}) => (\r\n    <li className= \"gastos\">\r\n        <p>\r\n           {gasto.nombre}\r\n\r\n           <span className =\"gasto\">${gasto.cantidad}</span> \r\n        </p>\r\n    </li>\r\n  );\r\n\r\n  Gasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n\r\n \r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => (\r\n    <div className =\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n        {gastos.map(gasto =>(\r\n             <Gasto\r\n                key={gasto.id}\r\n                gasto ={gasto}\r\n             />\r\n        ))}\r\n    </div>\r\n  );\r\n\r\n  Listado.propTypes = {\r\n      gastos: PropTypes.array.isRequired\r\n  }\r\n\r\n \r\nexport default Listado;\r\n","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n    if((presupuesto/4)> restante){\r\n        clase = 'alert alert-danger';\r\n    } else if ((presupuesto /2) > restante){\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert-success';\r\n    }\r\n    \r\n    return clase;\r\n}","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { revisarPresupuesto } from '../helpers';\r\n\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return (\r\n        <Fragment>\r\n           <div className = \"alert alert-primary\">\r\n              Presupuesto: $ {presupuesto}\r\n           </div>\r\n           <div className ={revisarPresupuesto(presupuesto, restante)}>\r\n               Restante: ${restante}\r\n           </div>\r\n        </Fragment>\r\n      );\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n\r\n}\r\n\r\n \r\nexport default ControlPresupuesto;","export default __webpack_public_path__ + \"static/media/imagen.967bd5ad.jpg\";","import React, {useState, useEffect} from 'react'\nimport Pregunta from './components/Pregunta'\nimport Formulario from './components/Formulario'\nimport Listado from './components/Listado'\nimport ControlPresupuesto from './components/ControlPresupuesto'\nimport Imagen from './imagen.jpg'\n\n\nfunction App() {\n\n  //Definir el state\n    const [presupuesto, guardarPresupuesto] =useState(0);\n    const [ restante, guardarRestante] = useState(0);\n    const [mostrarpregunta, actualizarPregunta] = useState(true);\n    const [gastos, guardarGastos] = useState([]);\n    const [gasto, guardarGasto] = useState({});\n    const [creargasto, guardarCrearGasto] = useState(false);\n\n    //UseEffect que actualiza el restante.\n\n    useEffect(() => {\n      if (creargasto) {\n\n        //agrega el nuevo presupuesto\n        guardarGastos([\n          ...gastos,\n          gasto\n        ]);\n\n        //resta el presupuesto actual\n        const presupuestoRestante = restante - gasto.cantidad;\n        guardarRestante(presupuestoRestante);\n\n\n        //Resetear a false\n        guardarCrearGasto(false);\n      }\n\n    },[gasto, creargasto, gastos ,restante])\n\n   \n\n  return (\n    <div className =\"container\">\n      <header>\n        <h1>Gasto semanal</h1>\n      </header>\n\n       <div className =\"contenido-principal contenido\">\n         <img className=\"imagen\" alt=\"imagen\" src={Imagen}/>\n         {mostrarpregunta ?\n            ( \n              <Pregunta\n                guardarPresupuesto = {guardarPresupuesto}\n                guardarRestante = {guardarRestante}\n                actualizarPregunta ={actualizarPregunta}\n         />\n         ) : (    \n        <div className=\"row\">\n          <div className= \"one-half column\">\n            <Formulario \n              guardarGasto ={guardarGasto}\n              guardarCrearGasto ={guardarCrearGasto}\n            />\n          </div>\n          <div className= \"one-half column\">\n            <Listado\n              gastos={gastos}\n            />\n            <ControlPresupuesto\n                 presupuesto={presupuesto}\n                 restante ={restante}\n            />\n          </div>\n       </div>) }\n       \n\n     \n       </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}